name: Terraform CI  # Workflow name

on: 
  push:             # Trigger this workflow on any push event to any branch

jobs:
  terraform-ci:     # Job name
    runs-on: ubuntu-latest    # Use the latest Ubuntu runner for the job

    steps:
      ## Step 1: Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      ## Step 2: Configure AWS credentials for Terraform to access AWS resources
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}         # AWS access key stored as secret
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS secret key stored as secret
          aws-region: us-east-1                                       # Set AWS region (replace if needed)

      ## Step 3: Set up Terraform in the environment
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      ## Step 4: Initialize Terraform
      # This will download and configure any required providers and modules
      - name: Terraform init
        run: terraform init

      ## Step 5: Run Terraform Plan
      # Generates an execution plan showing what changes Terraform will apply
      - name: Terraform Plan
        run: terraform plan

      ## Step 6: Apply the changes automatically
      # terraform apply will deploy changes as defined in the configuration files
      - name: Terraform Apply
        run: terraform apply --auto-approve   # --auto-approve flag to skip manual approval prompt
